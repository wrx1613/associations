<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:associations.properties" />

    <!-- 扫描注解，这样com.rui包下的文件都能被扫描 -->
    <context:component-scan base-package="com.rui"/>

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.rui" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 开启SpringMVC注解模式 -->
    <mvc:annotation-driven/>

    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
    <mvc:interceptors>
        <!-- 返回值封装的拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.rui.framework.result.ResponseResultInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:resources location="/upload/" mapping="/upload/**" />


    <!--springMVC框架流程
    1、用户发起请求到前端控制器（DispatcherServlet），前端控制器没有能力处理业务逻辑；
    2、通过HandlerMapping查找模型（Controller、Handler）；
    3、返回执行链，执行链包含了2部分内容，Handler对象以及拦截器（组）；
    4、通过HandlerAdapter执行模型（Handler）
    5、适配器调用Handler对象处理业务逻辑；
    6、模型处理完业务逻辑，返回ModelAndView对象，view不是真正的视图对象，而是视图名称；
    7、将ModelAndView对象返回给前端控制器；
    8、前端控制器通过视图名称经过视图解析器查找视图对象；
    9、返回视图对象；
    10、前端控制器渲染视图；
    11、返回给前端控制器；
    12、前端控制器将视图（html、json、xml、Excel）返回给用户；
    -->

</beans>